<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__config_8h_source" xml:lang="en-US">
<title>Config.h</title>
<indexterm><primary>include/Hummingbird_SQL/Config.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//</emphasis>
2 <emphasis role="comment">//&#32;Created&#32;by&#32;Kasper&#32;de&#32;Bruin&#32;on&#32;29/01/2024.</emphasis>
3 <emphasis role="comment">//</emphasis>
4 
5 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
6 
7 <emphasis role="preprocessor">#include&#32;&lt;exception&gt;</emphasis>
8 <emphasis role="preprocessor">#include&#32;&lt;optional&gt;</emphasis>
9 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
10 
11 <emphasis role="preprocessor">#include&#32;&lt;assert.h&gt;</emphasis>
12 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
13 
14 <emphasis role="preprocessor">#ifndef&#32;HUMMINGBIRD_SQL_ASSERT</emphasis>
15 <emphasis role="preprocessor">#define&#32;HUMMINGBIRD_SQL_ASSERT(_EXPR)&#32;assert(_EXPR)</emphasis><emphasis role="comment">//&#32;You&#32;can&#32;override&#32;in&#32;your&#32;Config.h</emphasis>
16 <emphasis role="preprocessor">#endif</emphasis>
17 
18 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_logging">Logging</link>&#32;{
19 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_logging_1_1source__loc">source_loc</link>&#32;{
20 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_logging_1_1source__loc_1a830c5efc34cf67cc723e2e6cb272a57f">source_loc</link>()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
21 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_logging_1_1source__loc_1a466a91da264d27bcc4f174eb752722c8">source_loc</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*filename_in,&#32;<emphasis role="keywordtype">int</emphasis>&#32;line_in,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*funcname_in)
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_struct_logging_1_1source__loc_1a43c4bb392c0ce7cb349dcefa1784374d">filename</link>{filename_in},
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_logging_1_1source__loc_1acb6ae2cbb3523d3932840d6dff63e3ef">line</link>{line_in},
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_logging_1_1source__loc_1a8028d4f344979c8fdfe177b4d54c8d06">funcname</link>{funcname_in}&#32;{}
25 
26 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_logging_1_1source__loc_1a03355b8c2febac449f103bee39863580">empty</link>()&#32;const&#32;noexcept&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_logging_1_1source__loc_1acb6ae2cbb3523d3932840d6dff63e3ef">line</link>&#32;==&#32;0;&#32;}
27 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_struct_logging_1_1source__loc_1a43c4bb392c0ce7cb349dcefa1784374d">filename</link>{<emphasis role="keyword">nullptr</emphasis>};
28 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_logging_1_1source__loc_1acb6ae2cbb3523d3932840d6dff63e3ef">line</link>{0};
29 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_struct_logging_1_1source__loc_1a8028d4f344979c8fdfe177b4d54c8d06">funcname</link>{<emphasis role="keyword">nullptr</emphasis>};
30 
31 &#32;&#32;&#32;&#32;std::string&#32;<link linkend="_struct_logging_1_1source__loc_1ae9d456750e967fa8dc99d886b3950a4e">toString</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{
32 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::string(<link linkend="_struct_logging_1_1source__loc_1a43c4bb392c0ce7cb349dcefa1784374d">filename</link>)&#32;+&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;+&#32;std::string(<link linkend="_struct_logging_1_1source__loc_1a8028d4f344979c8fdfe177b4d54c8d06">funcname</link>)&#32;+&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;+&#32;std::to_string(<link linkend="_struct_logging_1_1source__loc_1acb6ae2cbb3523d3932840d6dff63e3ef">line</link>)&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;|&quot;</emphasis>;
33 &#32;&#32;&#32;&#32;}
34 &#32;&#32;};
35 
36 &#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;showTrace(source_loc&#32;src,&#32;std::string&#32;msg)&#32;{
37 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;TRACE:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;src.toString()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;msg&#32;&lt;&lt;&#32;std::endl;
38 &#32;&#32;}
39 
40 &#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;showLog(source_loc&#32;src,&#32;std::string&#32;msg)&#32;{
41 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;LOG:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;src.toString()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;msg&#32;&lt;&lt;&#32;std::endl;
42 &#32;&#32;}
43 
44 &#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;showError(source_loc&#32;src,&#32;std::string&#32;msg)&#32;{
45 &#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;ERROR:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;src.toString()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;msg&#32;&lt;&lt;&#32;std::endl;
46 &#32;&#32;}
47 
48 &#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;showFatal(source_loc&#32;src,&#32;std::string&#32;msg)&#32;{
49 &#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;FATAL:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;src.toString()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;msg&#32;&lt;&lt;&#32;std::endl;
50 &#32;&#32;}
51 }<emphasis role="comment">//&#32;namespace&#32;Logging</emphasis>
52 
53 <emphasis role="preprocessor">#ifndef&#32;HUMMINGBIRD_SQL_LOG_LEVEL</emphasis>
54 <emphasis role="preprocessor">#define&#32;HUMMINGBIRD_SQL_LOG_LEVEL_TRACE&#32;0</emphasis>
55 <emphasis role="preprocessor">#define&#32;HUMMINGBIRD_SQL_LOG_LEVEL_LOG&#32;1</emphasis>
56 <emphasis role="preprocessor">#define&#32;HUMMINGBIRD_SQL_LOG_LEVEL_ERROR&#32;2</emphasis>
57 <emphasis role="preprocessor">#define&#32;HUMMINGBIRD_SQL_LOG_LEVEL_FATAL&#32;3</emphasis>
58 <emphasis role="preprocessor">#define&#32;HUMMINGBIRD_SQL_LOG_LEVEL_NONE&#32;4</emphasis>
59 <emphasis role="preprocessor">#define&#32;HUMMINGBIRD_SQL_LOG_LEVEL&#32;HUMMINGBIRD_SQL_LOG_LEVEL_TRACE</emphasis>
60 <emphasis role="preprocessor">#endif</emphasis>
61 
62 <emphasis role="preprocessor">#ifndef&#32;HUMMINGBIRD_SQL_LOG_ACTIVE</emphasis>
63 <emphasis role="preprocessor">#define&#32;HUMMINGBIRD_SQL_LOG_ACTIVE&#32;true</emphasis>
64 <emphasis role="preprocessor">#endif</emphasis>
65 
66 <emphasis role="preprocessor">#ifndef&#32;HUMMINGBIRD_SQL_SERVER_TRACE_FUNCTION</emphasis>
67 <emphasis role="preprocessor">#define&#32;HUMMINGBIRD_SQL_SERVER_TRACE_FUNCTION(...)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
68 <emphasis role="preprocessor">&#32;&#32;if&#32;(HUMMINGBIRD_SQL_LOG_ACTIVE&#32;&amp;&amp;&#32;HUMMINGBIRD_SQL_LOG_LEVEL&#32;&lt;=&#32;HUMMINGBIRD_SQL_LOG_LEVEL_TRACE)&#32;\</emphasis>
69 <emphasis role="preprocessor">&#32;&#32;::Logging::showTrace(::Logging::source_loc(__FILE__,&#32;__LINE__,&#32;__FUNCTION__),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
70 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__VA_ARGS__)</emphasis>
71 <emphasis role="preprocessor">#endif</emphasis>
72 
73 <emphasis role="preprocessor">#ifndef&#32;HUMMINGBIRD_SQL_SERVER_LOG_FUNCTION</emphasis>
74 <emphasis role="preprocessor">#define&#32;HUMMINGBIRD_SQL_SERVER_LOG_FUNCTION(...)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
75 <emphasis role="preprocessor">&#32;&#32;if&#32;(HUMMINGBIRD_SQL_LOG_ACTIVE&#32;&amp;&amp;&#32;HUMMINGBIRD_SQL_LOG_LEVEL&#32;&lt;=&#32;HUMMINGBIRD_SQL_LOG_LEVEL_LOG)&#32;\</emphasis>
76 <emphasis role="preprocessor">&#32;&#32;::Logging::showLog(::Logging::source_loc(__FILE__,&#32;__LINE__,&#32;__FUNCTION__),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
77 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__VA_ARGS__)</emphasis>
78 <emphasis role="preprocessor">#endif</emphasis>
79 
80 <emphasis role="preprocessor">#ifndef&#32;HUMMINGBIRD_SQL_SERVER_ERROR_FUNCTION</emphasis>
81 <emphasis role="preprocessor">#define&#32;HUMMINGBIRD_SQL_SERVER_ERROR_FUNCTION(...)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
82 <emphasis role="preprocessor">&#32;&#32;if&#32;(HUMMINGBIRD_SQL_LOG_ACTIVE&#32;&amp;&amp;&#32;HUMMINGBIRD_SQL_LOG_LEVEL&#32;&lt;=&#32;HUMMINGBIRD_SQL_LOG_LEVEL_ERROR)&#32;\</emphasis>
83 <emphasis role="preprocessor">&#32;&#32;::Logging::showError(::Logging::source_loc(__FILE__,&#32;__LINE__,&#32;__FUNCTION__),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
84 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__VA_ARGS__)</emphasis>
85 <emphasis role="preprocessor">#endif</emphasis>
86 
87 <emphasis role="preprocessor">#ifndef&#32;HUMMINGBIRD_SQL_SERVER_FATAL_FUNCTION</emphasis>
88 <emphasis role="preprocessor">#define&#32;HUMMINGBIRD_SQL_SERVER_FATAL_FUNCTION(...)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
89 <emphasis role="preprocessor">&#32;&#32;if&#32;(HUMMINGBIRD_SQL_LOG_ACTIVE&#32;&amp;&amp;&#32;HUMMINGBIRD_SQL_LOG_LEVEL&#32;&lt;=&#32;HUMMINGBIRD_SQL_LOG_LEVEL_FATAL)&#32;\</emphasis>
90 <emphasis role="preprocessor">&#32;&#32;::Logging::showFatal(::Logging::source_loc(__FILE__,&#32;__LINE__,&#32;__FUNCTION__),&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
91 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__VA_ARGS__)</emphasis>
92 <emphasis role="preprocessor">#endif</emphasis>
93 
94 
95 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_settings">Settings</link>&#32;{
96 <emphasis role="preprocessor">#ifndef&#32;HUMMINGBIRD_SQL_SETTINGS_FETCH_TABLES_ON_CONNECT</emphasis>
97 <emphasis role="preprocessor">#define&#32;HUMMINGBIRD_SQL_SETTINGS_FETCH_TABLES_ON_CONNECT&#32;true</emphasis>
98 <emphasis role="preprocessor">#endif</emphasis>
99 
100 <emphasis role="preprocessor">#ifndef&#32;HUMMINGBIRD_SQL_SETTINGS_FETCH_COLUMNS_ON_CONNECT</emphasis>
101 <emphasis role="preprocessor">#define&#32;HUMMINGBIRD_SQL_SETTINGS_FETCH_COLUMNS_AND_ROWS_ON_CONNECT&#32;false</emphasis>
102 <emphasis role="preprocessor">#endif</emphasis>
103 
104 <emphasis role="preprocessor">#ifndef&#32;HUMMINGBIRD_SQL_SETTINGS_DEFAULT_ROW_LIMIT</emphasis>
105 <emphasis role="preprocessor">#define&#32;HUMMINGBIRD_SQL_SETTINGS_DEFAULT_ROW_LIMIT&#32;1000</emphasis>
106 <emphasis role="preprocessor">#endif</emphasis>
107 
108 &#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
109 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_settings_1af8df46cc2ffa19c6ca0ccc25c15bbdd5">FetchTablesOnConnect</link>&#32;=&#32;<link linkend="__config_8h_1aee25cbb1419b856d16a2713cd09e1d94">HUMMINGBIRD_SQL_SETTINGS_FETCH_TABLES_ON_CONNECT</link>;
110 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_settings_1aba170b6586f1922b3883c09b9f8c9388">FetchColumnsAndRowsOnConnect</link>&#32;=&#32;<link linkend="__config_8h_1af2e140ca4b91e1925f7e7ca652e45b64">HUMMINGBIRD_SQL_SETTINGS_FETCH_COLUMNS_AND_ROWS_ON_CONNECT</link>;
111 &#32;&#32;}&#32;OnConnect;
112 
113 &#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
114 &#32;&#32;&#32;&#32;uint32_t&#32;<link linkend="_namespace_settings_1a3f8daea41391188e8743c89b8558d50b">DefaultRowLimit</link>&#32;=&#32;<link linkend="__config_8h_1a36b93bb4ec221fb7728b2fb390c1535b">HUMMINGBIRD_SQL_SETTINGS_DEFAULT_ROW_LIMIT</link>;
115 &#32;&#32;}&#32;Limits;
116 }<emphasis role="comment">//&#32;namespace&#32;Settings</emphasis>
</programlisting></section>

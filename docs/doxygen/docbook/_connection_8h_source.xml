<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__connection_8h_source" xml:lang="en-US">
<title>Connection.h</title>
<indexterm><primary>include/Hummingbird_SQL/Connection.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//</emphasis>
2 <emphasis role="comment">//&#32;Created&#32;by&#32;Kasper&#32;de&#32;Bruin&#32;on&#32;29/01/2024.</emphasis>
3 <emphasis role="comment">//</emphasis>
4 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
5 <emphasis role="comment">//forward&#32;declare</emphasis>
6 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacemysqlx_1_1abi2_1_1r0">mysqlx::abi2::r0</link>&#32;{
7 &#32;&#32;<emphasis role="keyword">class&#32;</emphasis>Session;
8 }
9 
10 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_humming_bird_1_1_sql">HummingBird::Sql</link>&#32;{
11 &#32;&#32;<emphasis role="keyword">class&#32;</emphasis>Row;
12 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>ColumnInfo;
13 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>TableInfo;
14 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>SchemaInfo;
15 }<emphasis role="comment">//&#32;namespace&#32;HummingBird::Sql</emphasis>
16 
17 <emphasis role="comment">//aliasses</emphasis>
18 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacemysqlx">mysqlx</link>&#32;{
19 &#32;&#32;<emphasis role="keyword">using&#32;</emphasis>mysqlx::abi2::r0::Session;
20 }
21 
22 <emphasis role="preprocessor">#include&#32;&lt;<link linkend="__config_8h">Hummingbird_SQL/Config.h</link>&gt;</emphasis>
23 <emphasis role="preprocessor">#include&#32;&lt;cctype&gt;</emphasis>
24 <emphasis role="preprocessor">#include&#32;&lt;exception&gt;</emphasis>
25 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
26 <emphasis role="preprocessor">#include&#32;&lt;map&gt;</emphasis>
27 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
28 <emphasis role="preprocessor">#include&#32;&lt;unordered_map&gt;</emphasis>
29 <emphasis role="preprocessor">#include&#32;&lt;utility&gt;</emphasis>
30 
31 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_humming_bird_1_1_sql">HummingBird::Sql</link>&#32;{
32 &#32;&#32;<emphasis role="comment">//&#32;Makes&#32;unordered&#32;map&#32;keys&#32;case&#32;insensitive</emphasis>
33 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_humming_bird_1_1_sql_1_1case__insensitive__unordered__map">case_insensitive_unordered_map</link>&#32;{
34 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_humming_bird_1_1_sql_1_1case__insensitive__unordered__map_1_1comp">comp</link>&#32;{
35 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_humming_bird_1_1_sql_1_1case__insensitive__unordered__map_1_1comp_1a9168f153ab513f19081d78c46eeaee88">operator()</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;lhs,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;rhs)<emphasis role="keyword">&#32;const&#32;</emphasis>{
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;On&#32;non&#32;Windows&#32;OS,&#32;use&#32;the&#32;function&#32;&quot;strcasecmp&quot;&#32;in&#32;#include&#32;&lt;strings.h&gt;</emphasis>
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;strcasecmp(lhs.c_str(),&#32;rhs.c_str())&#32;==&#32;0;
38 &#32;&#32;&#32;&#32;&#32;&#32;}
39 &#32;&#32;&#32;&#32;};
40 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_humming_bird_1_1_sql_1_1case__insensitive__unordered__map_1_1hash">hash</link>&#32;{
41 &#32;&#32;&#32;&#32;&#32;&#32;std::size_t&#32;<link linkend="_struct_humming_bird_1_1_sql_1_1case__insensitive__unordered__map_1_1hash_1a29189a3b7bd25f96c54ddc2e9dd0f6f6">operator()</link>(std::string&#32;str)<emphasis role="keyword">&#32;const&#32;</emphasis>{
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::size_t&#32;index&#32;=&#32;0;&#32;index&#32;&lt;&#32;str.size();&#32;++index)&#32;{
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;ch&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis><emphasis role="keyword">&gt;</emphasis>(str[index]);
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str[index]&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis><emphasis role="keyword">&gt;</emphasis>(std::tolower(ch));
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::hash&lt;std::string&gt;{}(<link linkend="_struct_humming_bird_1_1_sql_1_1case__insensitive__unordered__map_1_1hash">str</link>);
47 &#32;&#32;&#32;&#32;&#32;&#32;}
48 &#32;&#32;&#32;&#32;};
49 &#32;&#32;};
50 
55 &#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_humming_bird_1_1_sql_1_1_connection">Connection</link>&#32;{
56 <emphasis role="keyword">public</emphasis>:
57 &#32;&#32;&#32;&#32;<link linkend="_class_humming_bird_1_1_sql_1_1_connection_1a11dd47b3aa64db0e4818758d74e905e4">Connection</link>();
58 &#32;&#32;&#32;&#32;<link linkend="_class_humming_bird_1_1_sql_1_1_connection_1a119f44987d4e342f88eace7f9f0ce012">~Connection</link>();
59 
69 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_humming_bird_1_1_sql_1_1_connection_1a8287ef082a37903e197d263a38a04d03">connect</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;hostname,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;username,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;password,
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;schemaName,&#32;uint16_t&#32;port);
71 
76 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_humming_bird_1_1_sql_1_1_connection_1a19f0aff4ef660d6025bb11eb0b810268">disconnect</link>();
77 
84 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_humming_bird_1_1_sql_1_1_connection_1af1ab3a26099425eaa7938109221f2099">fetchSchemas</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_humming_bird_1_1_sql_1_1_connection_1ac6f602f44d586e7f9278af8b68c737f0">fetchTables</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;fetchColumnsAndRows);
85 
92 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_humming_bird_1_1_sql_1_1_connection_1ac6f602f44d586e7f9278af8b68c737f0">fetchTables</link>(<link linkend="_struct_humming_bird_1_1_sql_1_1_schema_info">SchemaInfo</link>&#32;&amp;schema,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;fetchColumnsAndRows);
93 
100 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_humming_bird_1_1_sql_1_1_connection_1ac6f602f44d586e7f9278af8b68c737f0">fetchTables</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;schemaName,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;fetchColumnsAndRows);
101 
108 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_humming_bird_1_1_sql_1_1_connection_1a97058387622bc6460ad1fafea058524a">fetchColumns</link>(<link linkend="_struct_humming_bird_1_1_sql_1_1_schema_info">SchemaInfo</link>&#32;&amp;schema,&#32;<link linkend="_struct_humming_bird_1_1_sql_1_1_table_info">TableInfo</link>&#32;&amp;table);
109 
116 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_humming_bird_1_1_sql_1_1_connection_1a97058387622bc6460ad1fafea058524a">fetchColumns</link>(<link linkend="_struct_humming_bird_1_1_sql_1_1_schema_info">SchemaInfo</link>&#32;&amp;schema,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;tableName);
117 
124 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_humming_bird_1_1_sql_1_1_connection_1a97058387622bc6460ad1fafea058524a">fetchColumns</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;schemaName,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;tableName);
125 
126 
133 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_humming_bird_1_1_sql_1_1_connection_1ad864503f0c2cf6a9aced4e9bf0c6b631">fetchRows</link>(<link linkend="_struct_humming_bird_1_1_sql_1_1_schema_info">SchemaInfo</link>&#32;&amp;schema,&#32;<link linkend="_struct_humming_bird_1_1_sql_1_1_table_info">TableInfo</link>&#32;&amp;table);
134 
142 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_humming_bird_1_1_sql_1_1_connection_1ad864503f0c2cf6a9aced4e9bf0c6b631">fetchRows</link>(<link linkend="_struct_humming_bird_1_1_sql_1_1_schema_info">SchemaInfo</link>&#32;&amp;schema,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;tableName);
143 
150 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_humming_bird_1_1_sql_1_1_connection_1ad864503f0c2cf6a9aced4e9bf0c6b631">fetchRows</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;schemaNames,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;tableName);
151 
152 &#32;&#32;&#32;&#32;<emphasis role="comment">//getters</emphasis>
153 
159 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_humming_bird_1_1_sql_1_1_schema_info">SchemaInfo</link>&#32;&amp;<link linkend="_class_humming_bird_1_1_sql_1_1_connection_1a07b5aeb9ea5dac4347c777a72c8e1eb2">getSchema</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;schemaName);
160 
167 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_humming_bird_1_1_sql_1_1_table_info">TableInfo</link>&#32;&amp;<link linkend="_class_humming_bird_1_1_sql_1_1_connection_1ad7d577e472d7bef648a105d5fff2b1d3">getTable</link>(<link linkend="_struct_humming_bird_1_1_sql_1_1_schema_info">SchemaInfo</link>&#32;&amp;schema,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;tableName);
168 
175 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_humming_bird_1_1_sql_1_1_table_info">TableInfo</link>&#32;&amp;<link linkend="_class_humming_bird_1_1_sql_1_1_connection_1ac542254dc7d946b92b5bf4da438a1d78">getTable</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;schema,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;tableName);
176 
181 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_humming_bird_1_1_sql_1_1_connection_1addae0ad7881e55df7b0e1275ec6b78c2">isConnected</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{
182 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_isConnected;
183 &#32;&#32;&#32;&#32;}
184 
189 &#32;&#32;&#32;&#32;mysqlx::Session&#32;&amp;<link linkend="_class_humming_bird_1_1_sql_1_1_connection_1ae64b880c6aefa583e1e5f86f56ca9e07">getSession</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{
190 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*session;
191 &#32;&#32;&#32;&#32;}
192 
193 <emphasis role="keyword">private</emphasis>:
194 
201 &#32;&#32;&#32;&#32;<link linkend="_struct_humming_bird_1_1_sql_1_1_schema_info">SchemaInfo</link>&#32;*getSchemaPtr(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;schemaName);
202 
210 &#32;&#32;&#32;&#32;<link linkend="_struct_humming_bird_1_1_sql_1_1_table_info">TableInfo</link>&#32;*getTablePtr(<link linkend="_struct_humming_bird_1_1_sql_1_1_schema_info">SchemaInfo</link>&#32;&amp;schema,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;tableName);
211 
212 <emphasis role="keyword">private</emphasis>:
213 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;m_isConnected&#32;=&#32;<emphasis role="keyword">false</emphasis>;
214 
215 &#32;&#32;&#32;&#32;std::string&#32;m_currentDatabaseName;
216 &#32;&#32;&#32;&#32;std::string&#32;m_host;
217 &#32;&#32;&#32;&#32;std::string&#32;m_user;
218 &#32;&#32;&#32;&#32;std::string&#32;m_password;
219 &#32;&#32;&#32;&#32;uint16_t&#32;m_port;
220 
221 &#32;&#32;&#32;&#32;mysqlx::Session&#32;*session;
222 &#32;&#32;&#32;&#32;std::unordered_map&lt;std::string,&#32;std::unique_ptr&lt;SchemaInfo&gt;,
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_humming_bird_1_1_sql_1_1case__insensitive__unordered__map_1_1hash">case_insensitive_unordered_map::hash</link>,
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_humming_bird_1_1_sql_1_1case__insensitive__unordered__map_1_1comp">case_insensitive_unordered_map::comp</link>&gt;
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_schemas;
226 &#32;&#32;};
227 }<emphasis role="comment">//&#32;namespace&#32;HummingBird::Sql</emphasis>
</programlisting></section>
